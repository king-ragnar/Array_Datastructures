'''
Minimum swaps required to bring all elements less than or equal to k together
Given an array of n positive integers and a number k. Find the minimum number of swaps required to bring all the numbers less than or equal to k together.

Input:  arr[] = {2, 1, 5, 6, 3}, k = 3
Output: 1

Explanation: 
To bring elements 2, 1, 3 together, swap 
element '5' with '3' such that final array
will be-
arr[] = {2, 1, 3, 6, 5}

Input:  arr[] = {2, 7, 9, 5, 8, 7, 4}, k = 5
Output: 2
'''


def minSwap(arr, n, k) : 
    swap=0
    index=0
    for i in range(n):
        if (arr[i]<=k):
            if i != index:
                swap=swap+1
            temp=arr[i]
            arr[i]=arr[index]
            arr[index]=temp
            index=index+1
            
    return swap
        

arr = [2, 7, 9, 5, 8, 7, 4] 
n = len(arr) 
k = 5
print (minSwap(arr, n, k)) 
 
