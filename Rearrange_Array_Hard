'''
Rearrange array such that arr[i] >= arr[j] if i is even and arr[i]<=arr[j] if i is odd and j < i
Given an array of n elements. Our task is to write a program to rearrange the array such that elements at even positions are greater than all elements before it and elements at odd positions are less than all elements before it.

Examples:

Input : arr[] = {1, 2, 3, 4, 5, 6, 7}
Output : 4 5 3 6 2 7 1

Input : arr[] = {1, 2, 1, 4, 5, 6, 8, 8} 
Output : 4 5 2 6 1 8 1 8
'''
#My way: if even length elements traverse from right to left and reverse the list ;;;; if odd length of elements traverse from left to right and reverse the list
#a neat version of the code is given below this program
a = [1, 2, 1, 4, 5, 6, 8, 8]

a.sort()


i=0
j=len(a)-1
lis=[]
if len(a)%2==0:
    
    
    while(i<=j):
        if i == j:
            lis.append(a[j])
        else:
            lis.append(a[j])
            lis.append(a[i])
        i=i+1
        j=j-1
    print(lis[::-1])
else:
    while(i<=j):
        if i == j:
            lis.append(a[j])
        else:
            lis.append(a[i])
            lis.append(a[j])
        i=i+1
        j=j-1
    print(lis[::-1])
   
 '''
 neat version
 
 a = [1, 2, 1, 4, 5, 6, 8, 8]

a.sort()


i=0
j=len(a)-1
lis=[]

while(i<=j):
    if i == j:
        lis.append(a[j])
    else:
        if len(a)%2==0:
            lis.append(a[j])
            lis.append(a[i])
        else:
            lis.append(a[i])
            lis.append(a[j])
    i=i+1
    j=j-1
print(lis[::-1])
 
 '''
